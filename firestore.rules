rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Users collection - users can read any user but only edit their own
    match /users/{userId} {
      allow read: if true;
      allow write: if request.auth != null && request.auth.uid == userId;
      allow create: if request.auth != null && request.auth.uid == userId;
    }

    // Restaurants collection - anyone can read, authenticated users can create/update
    match /restaurants/{restaurantId} {
      allow read: if true;
      allow write: if request.auth != null;
      allow create: if request.auth != null;
    }

    // Menu items collection - anyone can read, authenticated users can create/update
    match /menuItems/{menuItemId} {
      allow read: if true;
      allow write: if request.auth != null;
      allow create: if request.auth != null;
    }

    // Reviews collection - the main collection that needs soft delete support
    match /reviews/{reviewId} {
      allow read: if true;
      allow write: if request.auth != null && request.auth.uid == resource.data.userId;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
      allow update: if request.auth != null &&
        request.auth.uid == resource.data.userId &&
        (request.resource.data.diff(resource.data).affectedKeys().hasOnly(['personalNotes', 'updatedAt']) ||
         request.resource.data.diff(resource.data).affectedKeys().hasOnly(['isDeleted', 'deletedAt', 'updatedAt']));
    }

    // Saved lists collection - users can only access their own lists
    match /savedLists/{listId} {
      allow read, write: if request.auth != null && request.auth.uid == resource.data.userId;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
    }

    // Follows collection - users can read any follow relationship but only create/delete their own
    match /follows/{followId} {
      allow read: if true;
      allow write: if request.auth != null && request.auth.uid == resource.data.followerId;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.followerId;
      allow delete: if request.auth != null && request.auth.uid == resource.data.followerId;
    }
  }
}